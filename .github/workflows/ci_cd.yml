name: CI/CD

on:
  push:
  pull_request:
    branches: ["develop"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target_board: [XIAO-ESP32S3-Sense]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          mkdir build
          docker run --rm \
          -v ${{github.workspace}}:/project \
          -w /project \
          -u $(id -u) \
          -e HOME=/tmp \
          -e IDF_TARGET=esp32s3 \
          espressif/idf:release-v5.3 \
          idf.py build > build/output.txt
          cat build/output.txt | tee >(grep ' build/${{github.event.repository.name}}.bin' | awk '{for (i = 1; i <= NF; i++) {if ($i ~ /^0x[0-9a-fA-F]+$/) offset = $i; else if ($i ~ /\.bin$/) {gsub(/^.*\//, "", $i); print offset, $i}}}' > build/offsets.txt)

      - name: Package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir build/${{matrix.target_board}}
          cd build
          awk '{printf "{\"offset\":\"%s\", \"file\":\"%s\"}\n", $1, $2}' offsets.txt | jq -c -s '.' > ${{matrix.target_board}}/offsets.json
          cp bootloader/bootloader.bin partition_table/partition-table.bin ota_data_initial.bin ${{github.event.repository.name}}.bin ${{matrix.target_board}}
          tar -zcf ${{matrix.target_board}}.tar.gz ${{matrix.target_board}}

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/${{matrix.target_board}}.tar.gz
          token: ${{secrets.ACTION_RELEASE_TOKEN}}
          generate_release_notes: true
          make_latest: true


      - name: Merge Binaries
        run: |
          esptool.py --chip esp32s3 merge_bin -o merged_firmware.bin \
            0x0 build/bootloader/bootloader.bin \
            0x8000 build/partition_table/partition-table.bin \
            0xe000 build/ota_data_initial.bin \
            0x10000 build/XIAO_Webcam.bin
  
  
      - name: Upload image to Job Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: merged_firmware.bin
          name: merged_firmware
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true

